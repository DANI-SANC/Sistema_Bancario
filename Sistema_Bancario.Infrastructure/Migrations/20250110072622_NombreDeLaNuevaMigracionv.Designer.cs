// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sistema_Bancario.Infrastructure.Persistence;

#nullable disable

namespace Sistema_Bancario.Infrastructure.Migrations
{
    [DbContext(typeof(DbContextSQL))]
    [Migration("20250110072622_NombreDeLaNuevaMigracionv")]
    partial class NombreDeLaNuevaMigracionv
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IdentityRole");

                    b.HasData(
                        new
                        {
                            Id = "a1b2c3d4-e5f6-47a8-9b0c-d1e2f3a4b5c6",
                            Name = "Administrador",
                            NormalizedName = "Administrador"
                        },
                        new
                        {
                            Id = "b2c3d4e5-f6a7-48b9-0c1d-e2f3a4b5c6a7",
                            Name = "CajeroVentanilla",
                            NormalizedName = "CajeroVentanilla"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IdentityRoleClaim<string>");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "POLICIES",
                            ClaimValue = "LEER_DEPOSITO",
                            RoleId = "a1b2c3d4-e5f6-47a8-9b0c-d1e2f3a4b5c6"
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "POLICIES",
                            ClaimValue = "LEER_DEPOSITO",
                            RoleId = "b2c3d4e5-f6a7-48b9-0c1d-e2f3a4b5c6a7"
                        },
                        new
                        {
                            Id = 3,
                            ClaimType = "POLICIES",
                            ClaimValue = "LEER_RETIRO",
                            RoleId = "a1b2c3d4-e5f6-47a8-9b0c-d1e2f3a4b5c6"
                        },
                        new
                        {
                            Id = 4,
                            ClaimType = "POLICIES",
                            ClaimValue = "LEER_RETIRO",
                            RoleId = "b2c3d4e5-f6a7-48b9-0c1d-e2f3a4b5c6a7"
                        },
                        new
                        {
                            Id = 5,
                            ClaimType = "POLICIES",
                            ClaimValue = "RETIRO",
                            RoleId = "b2c3d4e5-f6a7-48b9-0c1d-e2f3a4b5c6a7"
                        },
                        new
                        {
                            Id = 6,
                            ClaimType = "POLICIES",
                            ClaimValue = "RETIRO",
                            RoleId = "a1b2c3d4-e5f6-47a8-9b0c-d1e2f3a4b5c6"
                        },
                        new
                        {
                            Id = 7,
                            ClaimType = "POLICIES",
                            ClaimValue = "DEPOSITO",
                            RoleId = "a1b2c3d4-e5f6-47a8-9b0c-d1e2f3a4b5c6"
                        },
                        new
                        {
                            Id = 8,
                            ClaimType = "POLICIES",
                            ClaimValue = "DEPOSITO",
                            RoleId = "b2c3d4e5-f6a7-48b9-0c1d-e2f3a4b5c6a7"
                        },
                        new
                        {
                            Id = 9,
                            ClaimType = "POLICIES",
                            ClaimValue = "LEER_ROL",
                            RoleId = "a1b2c3d4-e5f6-47a8-9b0c-d1e2f3a4b5c6"
                        },
                        new
                        {
                            Id = 10,
                            ClaimType = "POLICIES",
                            ClaimValue = "ELIMINAR_ROL",
                            RoleId = "a1b2c3d4-e5f6-47a8-9b0c-d1e2f3a4b5c6"
                        },
                        new
                        {
                            Id = 11,
                            ClaimType = "POLICIES",
                            ClaimValue = "MODIFICAR_ROL",
                            RoleId = "a1b2c3d4-e5f6-47a8-9b0c-d1e2f3a4b5c6"
                        },
                        new
                        {
                            Id = 12,
                            ClaimType = "POLICIES",
                            ClaimValue = "REGISTRAR_ROL",
                            RoleId = "a1b2c3d4-e5f6-47a8-9b0c-d1e2f3a4b5c6"
                        },
                        new
                        {
                            Id = 13,
                            ClaimType = "POLICIES",
                            ClaimValue = "REGISTRAR_USUARIO",
                            RoleId = "a1b2c3d4-e5f6-47a8-9b0c-d1e2f3a4b5c6"
                        },
                        new
                        {
                            Id = 14,
                            ClaimType = "POLICIES",
                            ClaimValue = "MODIFICAR_USUARIO",
                            RoleId = "a1b2c3d4-e5f6-47a8-9b0c-d1e2f3a4b5c6"
                        },
                        new
                        {
                            Id = 15,
                            ClaimType = "POLICIES",
                            ClaimValue = "ELIMINAR_USUARIO",
                            RoleId = "a1b2c3d4-e5f6-47a8-9b0c-d1e2f3a4b5c6"
                        },
                        new
                        {
                            Id = 16,
                            ClaimType = "POLICIES",
                            ClaimValue = "LEER_USUARIO",
                            RoleId = "a1b2c3d4-e5f6-47a8-9b0c-d1e2f3a4b5c6"
                        },
                        new
                        {
                            Id = 17,
                            ClaimType = "POLICIES",
                            ClaimValue = "REGISTRAR_CUENTA",
                            RoleId = "a1b2c3d4-e5f6-47a8-9b0c-d1e2f3a4b5c6"
                        },
                        new
                        {
                            Id = 18,
                            ClaimType = "POLICIES",
                            ClaimValue = "LEER_CUENTA",
                            RoleId = "a1b2c3d4-e5f6-47a8-9b0c-d1e2f3a4b5c6"
                        });
                });

            modelBuilder.Entity("Sistema_Bancario.Dominio.AplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AplicationUsers");
                });

            modelBuilder.Entity("Sistema_Bancario.Dominio.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("FechaDeNacimiento")
                        .HasColumnType("date");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Sistema_Bancario.Dominio.CuentaBancaria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NumeroDeCuenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Saldo")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("CuentaBancarias");
                });

            modelBuilder.Entity("Sistema_Bancario.Dominio.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Sistema_Bancario.Dominio.TipoTransaccion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoTransacciones");
                });

            modelBuilder.Entity("Sistema_Bancario.Dominio.Transaccion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CuentaBancariaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaTransaccion")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("TipoTransaccionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CuentaBancariaId");

                    b.HasIndex("TipoTransaccionId");

                    b.ToTable("Transacciones");
                });

            modelBuilder.Entity("Sistema_Bancario.Dominio.AplicationUser", b =>
                {
                    b.HasOne("Sistema_Bancario.Dominio.Role", "Role")
                        .WithMany("AplicationUsers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Sistema_Bancario.Dominio.CuentaBancaria", b =>
                {
                    b.HasOne("Sistema_Bancario.Dominio.Cliente", "Cliente")
                        .WithMany("CuentaBancaria")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Sistema_Bancario.Dominio.Transaccion", b =>
                {
                    b.HasOne("Sistema_Bancario.Dominio.CuentaBancaria", "CuentaBancaria")
                        .WithMany("Transaccion")
                        .HasForeignKey("CuentaBancariaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Sistema_Bancario.Dominio.TipoTransaccion", "TipoTransaccion")
                        .WithMany("Transaccion")
                        .HasForeignKey("TipoTransaccionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CuentaBancaria");

                    b.Navigation("TipoTransaccion");
                });

            modelBuilder.Entity("Sistema_Bancario.Dominio.Cliente", b =>
                {
                    b.Navigation("CuentaBancaria");
                });

            modelBuilder.Entity("Sistema_Bancario.Dominio.CuentaBancaria", b =>
                {
                    b.Navigation("Transaccion");
                });

            modelBuilder.Entity("Sistema_Bancario.Dominio.Role", b =>
                {
                    b.Navigation("AplicationUsers");
                });

            modelBuilder.Entity("Sistema_Bancario.Dominio.TipoTransaccion", b =>
                {
                    b.Navigation("Transaccion");
                });
#pragma warning restore 612, 618
        }
    }
}
